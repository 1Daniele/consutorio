<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCAB8AKEDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7
        20b4r6TNcbW86Ftxzla7S08UaTcWyv8Aao13DqeKjfwTpdy/7yygJz2XFaL/AA00m7s1UwtGuP4TWdsQ
        n0Z0S9k9roS1ubW7KmG4t5SemHGTXRafa+ZEpXp7Vxq/BOzSQNDcTR8/XNbVp8ObyOBTb37Lt9SRW3tK
        qesPxM+WL6nUWVqUkHHfvXR2seEB9R1riNO0TXLBP+PgTenzVuaTd69blVuLfcvrgHNH1j+aLXyD2fmd
        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
        Pb1o89vWi7DlZ039t/X8xRXM+e3rRRdhys//2Q==
</value>
  </data>
</root>